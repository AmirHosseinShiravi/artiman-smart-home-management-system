# Generated by Django 4.2.9 on 2024-07-27 16:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CityCoordinates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=100)),
                ('longitude', models.CharField(blank=True, max_length=100, null=True)),
                ('latitude', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataPointFunction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=255)),
                ('function_name', models.CharField(max_length=255)),
                ('value', models.CharField(default='null', max_length=255)),
                ('value_type', models.CharField(choices=[('BOOLEAN', 'boolean'), ('INTEGER', 'integer'), ('DECIMAL', 'decimal'), ('FLOAT', 'float'), ('STRING', 'string'), ('JSON', 'json'), ('DATE', 'date'), ('DATETIME', 'dateTime')], default='STRING', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('descriptions', models.CharField(blank=True, max_length=1000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='device_created_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='device_edited_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Home',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_name', models.CharField(max_length=100)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('owner_name', models.CharField(blank=True, max_length=100, null=True)),
                ('owner_phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('descriptions', models.CharField(blank=True, max_length=1000, null=True)),
                ('building', models.CharField(blank=True, max_length=100, null=True)),
                ('floor', models.CharField(blank=True, max_length=100, null=True)),
                ('unit', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='home_created_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='home_edited_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=100)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('owner_name', models.CharField(blank=True, max_length=100, null=True)),
                ('owner_phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('descriptions', models.CharField(blank=True, max_length=1000, null=True)),
                ('project_icon', models.ImageField(upload_to='project_icons/')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('project_lock', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dashboard.citycoordinates')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_created_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_edited_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UIBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('descriptions', models.CharField(blank=True, max_length=1000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('button_name', models.CharField(max_length=100)),
                ('on_text', models.CharField(max_length=100)),
                ('off_text', models.CharField(max_length=100)),
                ('on_color', models.CharField(max_length=100)),
                ('off_color', models.CharField(max_length=100)),
                ('on_icon', models.CharField(max_length=255)),
                ('off_icon', models.CharField(max_length=255)),
                ('add_to_home', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ui_created_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ui_edited_by', to=settings.AUTH_USER_MODEL)),
                ('parent_home', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_ui_elements', to='dashboard.home')),
                ('parent_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.project')),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FourPoleThermostat',
            fields=[
                ('devicebase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dashboard.devicebase')),
            ],
            bases=('dashboard.devicebase',),
        ),
        migrations.CreateModel(
            name='Switch',
            fields=[
                ('devicebase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dashboard.devicebase')),
            ],
            bases=('dashboard.devicebase',),
        ),
        migrations.CreateModel(
            name='SwitchDataPointFunction',
            fields=[
                ('datapointfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dashboard.datapointfunction')),
                ('function_type', models.CharField(default='switch', max_length=255)),
                ('switch_id', models.IntegerField()),
            ],
            bases=('dashboard.datapointfunction',),
        ),
        migrations.CreateModel(
            name='TenPoleThermostat',
            fields=[
                ('devicebase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dashboard.devicebase')),
            ],
            bases=('dashboard.devicebase',),
        ),
        migrations.CreateModel(
            name='Thermostat',
            fields=[
                ('devicebase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dashboard.devicebase')),
            ],
            bases=('dashboard.devicebase',),
        ),
        migrations.CreateModel(
            name='ThermostatDataPointFunction',
            fields=[
                ('datapointfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dashboard.datapointfunction')),
                ('function_type', models.CharField(default='thermostat', max_length=255)),
            ],
            bases=('dashboard.datapointfunction',),
        ),
        migrations.CreateModel(
            name='UIProxy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('ui_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.uibase')),
            ],
        ),
        migrations.AddField(
            model_name='uibase',
            name='parent_zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zone_ui_elements', to='dashboard.zone'),
        ),
        migrations.CreateModel(
            name='Tablet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('descriptions', models.CharField(blank=True, max_length=1000, null=True)),
                ('tablet_has_internal_mqtt_broker', models.BooleanField(default=False)),
                ('tablet_ip_address', models.GenericIPAddressField()),
                ('tablet_internal_mqtt_broker_port', models.IntegerField(default=1883)),
                ('tablet_internal_mqtt_broker_username', models.CharField(blank=True, default='9WHSrVue', max_length=100, null=True)),
                ('tablet_internal_mqtt_broker_password', models.CharField(blank=True, default='cA1bVH/q&D/d', max_length=100, null=True)),
                ('parent_home', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tablets', to='dashboard.home')),
                ('parent_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.project')),
            ],
        ),
        migrations.CreateModel(
            name='HomeUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('desc', models.TextField(blank=True, max_length=500)),
                ('is_tablet_user', models.BooleanField()),
                ('is_web_app_user', models.BooleanField()),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='users_avatar/original_files/')),
                ('parent_home', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homeUsers', to='dashboard.home')),
                ('parent_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.project')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='home',
            name='parent_project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homes', to='dashboard.project'),
        ),
        migrations.CreateModel(
            name='DeviceSwitchActions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref_data_point_status', models.CharField(choices=[('on', 'on'), ('off', 'off'), ('toggle', 'toggle')], default='on', max_length=50)),
                ('target_data_point_status', models.CharField(max_length=255)),
                ('target_data_point_status_type', models.CharField(choices=[('BOOLEAN', 'boolean'), ('INTEGER', 'integer'), ('DECIMAL', 'decimal'), ('FLOAT', 'float'), ('STRING', 'string'), ('JSON', 'json'), ('DATE', 'date'), ('DATETIME', 'dateTime')], default='STRING', max_length=255)),
                ('ref_data_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ref_data_point', to='dashboard.datapointfunction')),
                ('target_data_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_data_point', to='dashboard.datapointfunction')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceProxy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('device_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.devicebase')),
            ],
        ),
        migrations.AddField(
            model_name='devicebase',
            name='parent_home',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_devices', to='dashboard.home'),
        ),
        migrations.AddField(
            model_name='devicebase',
            name='parent_project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.project'),
        ),
        migrations.AddField(
            model_name='devicebase',
            name='parent_zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zone_devices', to='dashboard.zone'),
        ),
        migrations.AddField(
            model_name='datapointfunction',
            name='device_base',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='functions', to='dashboard.devicebase'),
        ),
        migrations.CreateModel(
            name='Controller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('descriptions', models.CharField(blank=True, max_length=1000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('port_number', models.IntegerField()),
                ('uart_baud_rate', models.IntegerField()),
                ('mqtt_client_id', models.CharField(default='controller_yLqppv5ci0', max_length=100)),
                ('mqtt_username', models.CharField(default='KILo4pCm6e', max_length=100)),
                ('mqtt_password', models.CharField(default='!)y]Fn0/kFft1y}Jc]6?', max_length=100)),
                ('client_key_pem', models.CharField(max_length=10000)),
                ('client_cert_pem', models.CharField(max_length=10000)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='controller_created_by', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='controller_edited_by', to=settings.AUTH_USER_MODEL)),
                ('parent_home', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='controllers', to='dashboard.home')),
                ('parent_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.project')),
            ],
        ),
        migrations.CreateModel(
            name='FivePoleSwitch',
            fields=[
                ('switch_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dashboard.switch')),
            ],
            bases=('dashboard.switch',),
        ),
        migrations.CreateModel(
            name='FourPoleSwitch',
            fields=[
                ('switch_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dashboard.switch')),
            ],
            bases=('dashboard.switch',),
        ),
        migrations.CreateModel(
            name='ThermostatUI',
            fields=[
                ('uibase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dashboard.uibase')),
                ('button_type', models.CharField(choices=[('switch', 'Switch button'), ('push_button', 'Push button'), ('thermostat', 'Thermostat button'), ('curtain', 'Curtain button')], default='thermostat', max_length=50)),
                ('control_mode_function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='control_mode', to='dashboard.datapointfunction')),
                ('current_temp_function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current_temp', to='dashboard.datapointfunction')),
                ('operation_mode_function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operation_mode', to='dashboard.datapointfunction')),
                ('speed_function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='speed', to='dashboard.datapointfunction')),
                ('target_temp_function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_temp', to='dashboard.datapointfunction')),
            ],
            bases=('dashboard.uibase',),
        ),
        migrations.CreateModel(
            name='SwitchUI',
            fields=[
                ('uibase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dashboard.uibase')),
                ('button_type', models.CharField(choices=[('switch', 'Switch button'), ('push_button', 'Push button'), ('thermostat', 'Thermostat button'), ('curtain', 'Curtain button')], default='switch', max_length=50)),
                ('data_point_function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='switch_button_data_point', to='dashboard.datapointfunction')),
            ],
            bases=('dashboard.uibase',),
        ),
        migrations.CreateModel(
            name='PushButtonUI',
            fields=[
                ('uibase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dashboard.uibase')),
                ('button_type', models.CharField(choices=[('switch', 'Switch button'), ('push_button', 'Push button'), ('thermostat', 'Thermostat button'), ('curtain', 'Curtain button')], default='push_button', max_length=50)),
                ('data_point_function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='push_button_data_point', to='dashboard.datapointfunction')),
            ],
            bases=('dashboard.uibase',),
        ),
        migrations.CreateModel(
            name='CurtainUI',
            fields=[
                ('uibase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dashboard.uibase')),
                ('button_type', models.CharField(choices=[('switch', 'Switch button'), ('push_button', 'Push button'), ('thermostat', 'Thermostat button'), ('curtain', 'Curtain button')], default='curtain', max_length=50)),
                ('close_data_point_function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='close_data_point', to='dashboard.datapointfunction')),
                ('open_data_point_function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='open_data_point', to='dashboard.datapointfunction')),
            ],
            bases=('dashboard.uibase',),
        ),
    ]
